plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.squareup.wire'
}

wire {
    sourcePath {
        srcDir 'com/coreman2200/ringstrings/protos/gen'
    }
    proto {
        out 'com/coreman2200/ringstrings/protos'
    }
    kotlin {
    }
    java {
    }
}

/* Variables */
ext.debugBuild = "RingStrings-debug"

android {
    signingConfigs {
        debug {
            keyAlias debugBuild
            keyPassword getPassword(debugBuild, "RSDBG_KEY_PASSWORD")
            storeFile file('/Users/new/git/ringstrings/rsdebugkeystore.jks')
            storePassword getPassword(debugBuild, "RSDBG_STORE_PASSWORD")
        }
    }

    compileSdkVersion 32
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId "com.coreman2200.ringstrings"
        minSdkVersion 29
        targetSdkVersion 32
        versionCode 1
        versionName "0.1"
        testApplicationId 'com.coreman2200.ringstrings'
        signingConfig signingConfigs.debug
    }

    sourceSets {
        main {
            manifest.srcFile './src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
        }
    }

    compileOptions {
        sourceCompatibility(JavaVersion.VERSION_11)
        targetCompatibility(JavaVersion.VERSION_11)
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    productFlavors {
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.test'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/swisseph-2.01.00-00.jar')
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation('com.squareup.assertj:assertj-android:1.2.0') {
        exclude group: 'com.android.support'
    }

    implementation 'com.google.android.material:material:1.6.0-alpha01'

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation "androidx.fragment:fragment-ktx:1.4.0"


    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'

    implementation 'com.google.dagger:hilt-android:2.35'
    kapt 'com.google.dagger:hilt-android-compiler:2.35'


    implementation("com.squareup.retrofit2:retrofit:2.9.0") {
        exclude module: 'okhttp'
    }

    implementation 'com.google.dagger:dagger:2.40.5'
    kapt 'com.google.dagger:dagger-compiler:2.40.5'
    implementation 'com.google.dagger:dagger-android:2.40.5'
    // If you're using classes in dagger.android
    implementation 'com.google.dagger:dagger-android-support:2.40.5'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.40.5'

    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.3"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"


    api "com.squareup.wire:wire-runtime:4.0.1"

    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
repositories {
    mavenCentral()
}
