// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ringstrings.proto at 42:1
package com.coreman2200.domain.model.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * Identifiers necessary to store symbols (beyond scope of symbol entity..)
 */
public final class SymbolIDBundle extends Message<SymbolIDBundle, SymbolIDBundle.Builder> {
  public static final ProtoAdapter<SymbolIDBundle> ADAPTER = new ProtoAdapter<SymbolIDBundle>(FieldEncoding.LENGTH_DELIMITED, SymbolIDBundle.class) {
    @Override
    public int encodedSize(SymbolIDBundle value) {
      return (value.profile_id != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.profile_id) : 0)
          + (value.chart_id != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.chart_id) : 0)
          + (value.strata_id != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.strata_id) : 0)
          + (value.type_id != null ? ProtoAdapter.INT32.encodedSizeWithTag(4, value.type_id) : 0)
          + (value.symbol_id != null ? ProtoAdapter.INT32.encodedSizeWithTag(5, value.symbol_id) : 0)
          + (value.desc_id != null ? ProtoAdapter.INT32.encodedSizeWithTag(6, value.desc_id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.name) : 0)
          + ProtoAdapter.INT32.asRepeated().encodedSizeWithTag(8, value.symbol_qualities)
          + ProtoAdapter.INT32.asRepeated().encodedSizeWithTag(9, value.symbol_children)
          + (value.settings != null ? RingStringsAppSettings.ADAPTER.encodedSizeWithTag(10, value.settings) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SymbolIDBundle value) throws IOException {
      if (value.profile_id != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.profile_id);
      if (value.chart_id != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.chart_id);
      if (value.strata_id != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.strata_id);
      if (value.type_id != null) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.type_id);
      if (value.symbol_id != null) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.symbol_id);
      if (value.desc_id != null) ProtoAdapter.INT32.encodeWithTag(writer, 6, value.desc_id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.name);
      if (value.symbol_qualities != null) ProtoAdapter.INT32.asRepeated().encodeWithTag(writer, 8, value.symbol_qualities);
      if (value.symbol_children != null) ProtoAdapter.INT32.asRepeated().encodeWithTag(writer, 9, value.symbol_children);
      if (value.settings != null) RingStringsAppSettings.ADAPTER.encodeWithTag(writer, 10, value.settings);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SymbolIDBundle decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.profile_id(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.chart_id(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.strata_id(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.type_id(ProtoAdapter.INT32.decode(reader)); break;
          case 5: builder.symbol_id(ProtoAdapter.INT32.decode(reader)); break;
          case 6: builder.desc_id(ProtoAdapter.INT32.decode(reader)); break;
          case 7: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.symbol_qualities.add(ProtoAdapter.INT32.decode(reader)); break;
          case 9: builder.symbol_children.add(ProtoAdapter.INT32.decode(reader)); break;
          case 10: builder.settings(RingStringsAppSettings.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SymbolIDBundle redact(SymbolIDBundle value) {
      Builder builder = value.newBuilder();
      if (builder.settings != null) builder.settings = RingStringsAppSettings.ADAPTER.redact(builder.settings);
      builder.clearUnknownFields();
      return builder.build();
    }
  };

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_PROFILE_ID = 0;

  public static final Integer DEFAULT_CHART_ID = 0;

  public static final Integer DEFAULT_STRATA_ID = 0;

  public static final Integer DEFAULT_TYPE_ID = 0;

  public static final Integer DEFAULT_SYMBOL_ID = 0;

  public static final Integer DEFAULT_DESC_ID = 0;

  public static final String DEFAULT_NAME = "";

  /**
   * _PROFILEID, _CHARTID, _STRATAID, _TYPEID, _SYMBOLID, _DESC_ID, _NAME, SymbolQualities, _CHILDREN, Settings
   */
  public final Integer profile_id;

  public final Integer chart_id;

  public final Integer strata_id;

  public final Integer type_id;

  public final Integer symbol_id;

  public final Integer desc_id;

  public final String name;

  public final List<Integer> symbol_qualities;

  public final List<Integer> symbol_children;

  public final RingStringsAppSettings settings;

  public SymbolIDBundle(Integer profile_id, Integer chart_id, Integer strata_id, Integer type_id, Integer symbol_id, Integer desc_id, String name, List<Integer> symbol_qualities, List<Integer> symbol_children, RingStringsAppSettings settings) {
    this(profile_id, chart_id, strata_id, type_id, symbol_id, desc_id, name, symbol_qualities, symbol_children, settings, ByteString.EMPTY);
  }

  public SymbolIDBundle(Integer profile_id, Integer chart_id, Integer strata_id, Integer type_id, Integer symbol_id, Integer desc_id, String name, List<Integer> symbol_qualities, List<Integer> symbol_children, RingStringsAppSettings settings, ByteString unknownFields) {
    super(unknownFields);
    this.profile_id = profile_id;
    this.chart_id = chart_id;
    this.strata_id = strata_id;
    this.type_id = type_id;
    this.symbol_id = symbol_id;
    this.desc_id = desc_id;
    this.name = name;
    this.symbol_qualities = immutableCopyOf("symbol_qualities", symbol_qualities);
    this.symbol_children = immutableCopyOf("symbol_children", symbol_children);
    this.settings = settings;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.profile_id = profile_id;
    builder.chart_id = chart_id;
    builder.strata_id = strata_id;
    builder.type_id = type_id;
    builder.symbol_id = symbol_id;
    builder.desc_id = desc_id;
    builder.name = name;
    builder.symbol_qualities = copyOf("symbol_qualities", symbol_qualities);
    builder.symbol_children = copyOf("symbol_children", symbol_children);
    builder.settings = settings;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SymbolIDBundle)) return false;
    SymbolIDBundle o = (SymbolIDBundle) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(profile_id, o.profile_id)
        && equals(chart_id, o.chart_id)
        && equals(strata_id, o.strata_id)
        && equals(type_id, o.type_id)
        && equals(symbol_id, o.symbol_id)
        && equals(desc_id, o.desc_id)
        && equals(name, o.name)
        && equals(symbol_qualities, o.symbol_qualities)
        && equals(symbol_children, o.symbol_children)
        && equals(settings, o.settings);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (profile_id != null ? profile_id.hashCode() : 0);
      result = result * 37 + (chart_id != null ? chart_id.hashCode() : 0);
      result = result * 37 + (strata_id != null ? strata_id.hashCode() : 0);
      result = result * 37 + (type_id != null ? type_id.hashCode() : 0);
      result = result * 37 + (symbol_id != null ? symbol_id.hashCode() : 0);
      result = result * 37 + (desc_id != null ? desc_id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (symbol_qualities != null ? symbol_qualities.hashCode() : 1);
      result = result * 37 + (symbol_children != null ? symbol_children.hashCode() : 1);
      result = result * 37 + (settings != null ? settings.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (profile_id != null) builder.append(", profile_id=").append(profile_id);
    if (chart_id != null) builder.append(", chart_id=").append(chart_id);
    if (strata_id != null) builder.append(", strata_id=").append(strata_id);
    if (type_id != null) builder.append(", type_id=").append(type_id);
    if (symbol_id != null) builder.append(", symbol_id=").append(symbol_id);
    if (desc_id != null) builder.append(", desc_id=").append(desc_id);
    if (name != null) builder.append(", name=").append(name);
    if (symbol_qualities != null) builder.append(", symbol_qualities=").append(symbol_qualities);
    if (symbol_children != null) builder.append(", symbol_children=").append(symbol_children);
    if (settings != null) builder.append(", settings=").append(settings);
    return builder.replace(0, 2, "SymbolIDBundle{").append('}').toString();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<SymbolIDBundle, Builder> {
    public Integer profile_id;

    public Integer chart_id;

    public Integer strata_id;

    public Integer type_id;

    public Integer symbol_id;

    public Integer desc_id;

    public String name;

    public List<Integer> symbol_qualities;

    public List<Integer> symbol_children;

    public RingStringsAppSettings settings;

    public Builder() {
      symbol_qualities = newMutableList();
      symbol_children = newMutableList();
    }

    /**
     * _PROFILEID, _CHARTID, _STRATAID, _TYPEID, _SYMBOLID, _DESC_ID, _NAME, SymbolQualities, _CHILDREN, Settings
     */
    public Builder profile_id(Integer profile_id) {
      this.profile_id = profile_id;
      return this;
    }

    public Builder chart_id(Integer chart_id) {
      this.chart_id = chart_id;
      return this;
    }

    public Builder strata_id(Integer strata_id) {
      this.strata_id = strata_id;
      return this;
    }

    public Builder type_id(Integer type_id) {
      this.type_id = type_id;
      return this;
    }

    public Builder symbol_id(Integer symbol_id) {
      this.symbol_id = symbol_id;
      return this;
    }

    public Builder desc_id(Integer desc_id) {
      this.desc_id = desc_id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder symbol_qualities(List<Integer> symbol_qualities) {
      checkElementsNotNull(symbol_qualities);
      this.symbol_qualities = symbol_qualities;
      return this;
    }

    public Builder symbol_children(List<Integer> symbol_children) {
      checkElementsNotNull(symbol_children);
      this.symbol_children = symbol_children;
      return this;
    }

    public Builder settings(RingStringsAppSettings settings) {
      this.settings = settings;
      return this;
    }

    @Override
    public SymbolIDBundle build() {
      return new SymbolIDBundle(profile_id, chart_id, strata_id, type_id, symbol_id, desc_id, name, symbol_qualities, symbol_children, settings, buildUnknownFields());
    }
  }
}
