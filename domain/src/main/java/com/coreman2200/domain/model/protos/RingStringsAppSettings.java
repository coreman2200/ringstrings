// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ringstrings.proto at 56:1
package com.coreman2200.domain.model.protos;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireEnum;
import java.io.IOException;
import java.lang.Double;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class RingStringsAppSettings extends Message<RingStringsAppSettings, RingStringsAppSettings.Builder> {
  public static final ProtoAdapter<RingStringsAppSettings> ADAPTER = new ProtoAdapter<RingStringsAppSettings>(FieldEncoding.LENGTH_DELIMITED, RingStringsAppSettings.class) {
    @Override
    public int encodedSize(RingStringsAppSettings value) {
      return (value.general != null ? GeneralSettings.ADAPTER.encodedSizeWithTag(1, value.general) : 0)
          + (value.astro != null ? AstrologySettings.ADAPTER.encodedSizeWithTag(2, value.astro) : 0)
          + (value.num != null ? NumerologySettings.ADAPTER.encodedSizeWithTag(3, value.num) : 0)
          + (value.last_update != null ? ProtoAdapter.INT64.encodedSizeWithTag(4, value.last_update) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RingStringsAppSettings value) throws IOException {
      if (value.general != null) GeneralSettings.ADAPTER.encodeWithTag(writer, 1, value.general);
      if (value.astro != null) AstrologySettings.ADAPTER.encodeWithTag(writer, 2, value.astro);
      if (value.num != null) NumerologySettings.ADAPTER.encodeWithTag(writer, 3, value.num);
      if (value.last_update != null) ProtoAdapter.INT64.encodeWithTag(writer, 4, value.last_update);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RingStringsAppSettings decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.general(GeneralSettings.ADAPTER.decode(reader)); break;
          case 2: builder.astro(AstrologySettings.ADAPTER.decode(reader)); break;
          case 3: builder.num(NumerologySettings.ADAPTER.decode(reader)); break;
          case 4: builder.last_update(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RingStringsAppSettings redact(RingStringsAppSettings value) {
      Builder builder = value.newBuilder();
      if (builder.general != null) builder.general = GeneralSettings.ADAPTER.redact(builder.general);
      if (builder.astro != null) builder.astro = AstrologySettings.ADAPTER.redact(builder.astro);
      if (builder.num != null) builder.num = NumerologySettings.ADAPTER.redact(builder.num);
      builder.clearUnknownFields();
      return builder.build();
    }
  };

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_LAST_UPDATE = 0L;

  public final GeneralSettings general;

  public final AstrologySettings astro;

  public final NumerologySettings num;

  public final Long last_update;

  public RingStringsAppSettings(GeneralSettings general, AstrologySettings astro, NumerologySettings num, Long last_update) {
    this(general, astro, num, last_update, ByteString.EMPTY);
  }

  public RingStringsAppSettings(GeneralSettings general, AstrologySettings astro, NumerologySettings num, Long last_update, ByteString unknownFields) {
    super(unknownFields);
    this.general = general;
    this.astro = astro;
    this.num = num;
    this.last_update = last_update;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.general = general;
    builder.astro = astro;
    builder.num = num;
    builder.last_update = last_update;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RingStringsAppSettings)) return false;
    RingStringsAppSettings o = (RingStringsAppSettings) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(general, o.general)
        && equals(astro, o.astro)
        && equals(num, o.num)
        && equals(last_update, o.last_update);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (general != null ? general.hashCode() : 0);
      result = result * 37 + (astro != null ? astro.hashCode() : 0);
      result = result * 37 + (num != null ? num.hashCode() : 0);
      result = result * 37 + (last_update != null ? last_update.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (general != null) builder.append(", general=").append(general);
    if (astro != null) builder.append(", astro=").append(astro);
    if (num != null) builder.append(", num=").append(num);
    if (last_update != null) builder.append(", last_update=").append(last_update);
    return builder.replace(0, 2, "RingStringsAppSettings{").append('}').toString();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<RingStringsAppSettings, Builder> {
    public GeneralSettings general;

    public AstrologySettings astro;

    public NumerologySettings num;

    public Long last_update;

    public Builder() {
    }

    public Builder general(GeneralSettings general) {
      this.general = general;
      return this;
    }

    public Builder astro(AstrologySettings astro) {
      this.astro = astro;
      return this;
    }

    public Builder num(NumerologySettings num) {
      this.num = num;
      return this;
    }

    public Builder last_update(Long last_update) {
      this.last_update = last_update;
      return this;
    }

    @Override
    public RingStringsAppSettings build() {
      return new RingStringsAppSettings(general, astro, num, last_update, buildUnknownFields());
    }
  }

  /**
   * General app settings TODO
   */
  public static final class GeneralSettings extends Message<GeneralSettings, GeneralSettings.Builder> {
    public static final ProtoAdapter<GeneralSettings> ADAPTER = new ProtoAdapter<GeneralSettings>(FieldEncoding.LENGTH_DELIMITED, GeneralSettings.class) {
      @Override
      public int encodedSize(GeneralSettings value) {
        return value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, GeneralSettings value) throws IOException {
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public GeneralSettings decode(ProtoReader reader) throws IOException {
        GeneralSettings.Builder builder = new GeneralSettings.Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public GeneralSettings redact(GeneralSettings value) {
        GeneralSettings.Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    };

    private static final long serialVersionUID = 0L;

    public GeneralSettings() {
      this(ByteString.EMPTY);
    }

    public GeneralSettings(ByteString unknownFields) {
      super(unknownFields);
    }

    @Override
    public GeneralSettings.Builder newBuilder() {
      GeneralSettings.Builder builder = new GeneralSettings.Builder();
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      return other instanceof GeneralSettings;
    }

    @Override
    public int hashCode() {
      return unknownFields().hashCode();
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      return builder.replace(0, 2, "GeneralSettings{").append('}').toString();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<GeneralSettings, GeneralSettings.Builder> {
      public Builder() {
      }

      @Override
      public GeneralSettings build() {
        return new GeneralSettings(buildUnknownFields());
      }
    }
  }

  /**
   * Settings necessary for Astrological chart building
   */
  public static final class AstrologySettings extends Message<AstrologySettings, AstrologySettings.Builder> {
    public static final ProtoAdapter<AstrologySettings> ADAPTER = new ProtoAdapter<AstrologySettings>(FieldEncoding.LENGTH_DELIMITED, AstrologySettings.class) {
      @Override
      public int encodedSize(AstrologySettings value) {
        return (value.max_orb != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(1, value.max_orb) : 0)
            + (value.ephe_dir != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.ephe_dir) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, AstrologySettings value) throws IOException {
        if (value.max_orb != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 1, value.max_orb);
        if (value.ephe_dir != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.ephe_dir);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public AstrologySettings decode(ProtoReader reader) throws IOException {
        AstrologySettings.Builder builder = new AstrologySettings.Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.max_orb(ProtoAdapter.DOUBLE.decode(reader)); break;
            case 2: builder.ephe_dir(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public AstrologySettings redact(AstrologySettings value) {
        AstrologySettings.Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    };

    private static final long serialVersionUID = 0L;

    public static final Double DEFAULT_MAX_ORB = 0.0d;

    public static final String DEFAULT_EPHE_DIR = "";

    /**
     * Max orb used for calculating transits/aspects
     */
    public final Double max_orb;

    /**
     * Default ephemeris directory
     */
    public final String ephe_dir;

    public AstrologySettings(Double max_orb, String ephe_dir) {
      this(max_orb, ephe_dir, ByteString.EMPTY);
    }

    public AstrologySettings(Double max_orb, String ephe_dir, ByteString unknownFields) {
      super(unknownFields);
      this.max_orb = max_orb;
      this.ephe_dir = ephe_dir;
    }

    @Override
    public AstrologySettings.Builder newBuilder() {
      AstrologySettings.Builder builder = new AstrologySettings.Builder();
      builder.max_orb = max_orb;
      builder.ephe_dir = ephe_dir;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof AstrologySettings)) return false;
      AstrologySettings o = (AstrologySettings) other;
      return equals(unknownFields(), o.unknownFields())
          && equals(max_orb, o.max_orb)
          && equals(ephe_dir, o.ephe_dir);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (max_orb != null ? max_orb.hashCode() : 0);
        result = result * 37 + (ephe_dir != null ? ephe_dir.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (max_orb != null) builder.append(", max_orb=").append(max_orb);
      if (ephe_dir != null) builder.append(", ephe_dir=").append(ephe_dir);
      return builder.replace(0, 2, "AstrologySettings{").append('}').toString();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<AstrologySettings, AstrologySettings.Builder> {
      public Double max_orb;

      public String ephe_dir;

      public Builder() {
      }

      /**
       * Max orb used for calculating transits/aspects
       */
      public Builder max_orb(Double max_orb) {
        this.max_orb = max_orb;
        return this;
      }

      /**
       * Default ephemeris directory
       */
      public Builder ephe_dir(String ephe_dir) {
        this.ephe_dir = ephe_dir;
        return this;
      }

      @Override
      public AstrologySettings build() {
        return new AstrologySettings(max_orb, ephe_dir, buildUnknownFields());
      }
    }
  }

  /**
   * Settings necessary for Numerological chart building
   */
  public static final class NumerologySettings extends Message<NumerologySettings, NumerologySettings.Builder> {
    public static final ProtoAdapter<NumerologySettings> ADAPTER = new ProtoAdapter<NumerologySettings>(FieldEncoding.LENGTH_DELIMITED, NumerologySettings.class) {
      @Override
      public int encodedSize(NumerologySettings value) {
        return (value.number_system != null ? NumberSystemType.ADAPTER.encodedSizeWithTag(1, value.number_system) : 0)
            + value.unknownFields().size();
      }

      @Override
      public void encode(ProtoWriter writer, NumerologySettings value) throws IOException {
        if (value.number_system != null) NumberSystemType.ADAPTER.encodeWithTag(writer, 1, value.number_system);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public NumerologySettings decode(ProtoReader reader) throws IOException {
        NumerologySettings.Builder builder = new NumerologySettings.Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: {
              try {
                builder.number_system(NumberSystemType.ADAPTER.decode(reader));
              } catch (ProtoAdapter.EnumConstantNotFoundException e) {
                builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
              }
              break;
            }
            default: {
              FieldEncoding fieldEncoding = reader.peekFieldEncoding();
              Object value = fieldEncoding.rawProtoAdapter().decode(reader);
              builder.addUnknownField(tag, fieldEncoding, value);
            }
          }
        }
        reader.endMessage(token);
        return builder.build();
      }

      @Override
      public NumerologySettings redact(NumerologySettings value) {
        NumerologySettings.Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    };

    private static final long serialVersionUID = 0L;

    public static final NumberSystemType DEFAULT_NUMBER_SYSTEM = NumberSystemType.CHALDEAN;

    public final NumberSystemType number_system;

    public NumerologySettings(NumberSystemType number_system) {
      this(number_system, ByteString.EMPTY);
    }

    public NumerologySettings(NumberSystemType number_system, ByteString unknownFields) {
      super(unknownFields);
      this.number_system = number_system;
    }

    @Override
    public NumerologySettings.Builder newBuilder() {
      NumerologySettings.Builder builder = new NumerologySettings.Builder();
      builder.number_system = number_system;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof NumerologySettings)) return false;
      NumerologySettings o = (NumerologySettings) other;
      return equals(unknownFields(), o.unknownFields())
          && equals(number_system, o.number_system);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (number_system != null ? number_system.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (number_system != null) builder.append(", number_system=").append(number_system);
      return builder.replace(0, 2, "NumerologySettings{").append('}').toString();
    }

    public static final class Builder extends com.squareup.wire.Message.Builder<NumerologySettings, NumerologySettings.Builder> {
      public NumberSystemType number_system;

      public Builder() {
      }

      public Builder number_system(NumberSystemType number_system) {
        this.number_system = number_system;
        return this;
      }

      @Override
      public NumerologySettings build() {
        return new NumerologySettings(number_system, buildUnknownFields());
      }
    }

    /**
     * Currently supports two distinct number systems
     */
    public enum NumberSystemType implements WireEnum {
      CHALDEAN(0),

      PYTHAGOREAN(1);

      public static final ProtoAdapter<NumberSystemType> ADAPTER = ProtoAdapter.newEnumAdapter(NumberSystemType.class);

      private final int value;

      NumberSystemType(int value) {
        this.value = value;
      }

      /**
       * Return the constant for {@code value} or null.
       */
      public static NumberSystemType fromValue(int value) {
        switch (value) {
          case 0: return CHALDEAN;
          case 1: return PYTHAGOREAN;
          default: return null;
        }
      }

      @Override
      public int getValue() {
        return value;
      }
    }
  }
}
