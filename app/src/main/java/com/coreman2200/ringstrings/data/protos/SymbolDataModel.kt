// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.coreman2200.ringstrings.data.protos.SymbolDataModel in ringstrings.proto
package com.coreman2200.ringstrings.`data`.protos

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * Identifiers necessary to store symbols (beyond scope of symbol entity..)
 */
public class SymbolDataModel(
  /**
   * _PROFILEID, _CHARTID, _STRATAID, _TYPEID, _SYMBOLID, _DESC_ID, _NAME
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "profileId"
  )
  public val profile_id: Int = 0,
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "chartId"
  )
  public val chart_id: Int = 0,
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "strataId"
  )
  public val strata_id: Int = 0,
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "typeId"
  )
  public val type_id: Int = 0,
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "symbolId"
  )
  public val symbol_id: Int = 0,
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "descId"
  )
  public val desc_id: Int = 0,
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY
  )
  public val name: String = "",
  @field:WireField(
    tag = 8,
    adapter = "com.coreman2200.ringstrings.data.protos.RingStringsAppSettings#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY
  )
  public val settings: RingStringsAppSettings? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : AndroidMessage<SymbolDataModel, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  public override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is SymbolDataModel) return false
    if (unknownFields != other.unknownFields) return false
    if (profile_id != other.profile_id) return false
    if (chart_id != other.chart_id) return false
    if (strata_id != other.strata_id) return false
    if (type_id != other.type_id) return false
    if (symbol_id != other.symbol_id) return false
    if (desc_id != other.desc_id) return false
    if (name != other.name) return false
    if (settings != other.settings) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + profile_id.hashCode()
      result = result * 37 + chart_id.hashCode()
      result = result * 37 + strata_id.hashCode()
      result = result * 37 + type_id.hashCode()
      result = result * 37 + symbol_id.hashCode()
      result = result * 37 + desc_id.hashCode()
      result = result * 37 + name.hashCode()
      result = result * 37 + (settings?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """profile_id=$profile_id"""
    result += """chart_id=$chart_id"""
    result += """strata_id=$strata_id"""
    result += """type_id=$type_id"""
    result += """symbol_id=$symbol_id"""
    result += """desc_id=$desc_id"""
    result += """name=${sanitize(name)}"""
    if (settings != null) result += """settings=$settings"""
    return result.joinToString(prefix = "SymbolDataModel{", separator = ", ", postfix = "}")
  }

  public fun copy(
    profile_id: Int = this.profile_id,
    chart_id: Int = this.chart_id,
    strata_id: Int = this.strata_id,
    type_id: Int = this.type_id,
    symbol_id: Int = this.symbol_id,
    desc_id: Int = this.desc_id,
    name: String = this.name,
    settings: RingStringsAppSettings? = this.settings,
    unknownFields: ByteString = this.unknownFields
  ): SymbolDataModel = SymbolDataModel(profile_id, chart_id, strata_id, type_id, symbol_id, desc_id,
      name, settings, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<SymbolDataModel> = object : ProtoAdapter<SymbolDataModel>(
      FieldEncoding.LENGTH_DELIMITED, 
      SymbolDataModel::class, 
      "type.googleapis.com/com.coreman2200.ringstrings.data.protos.SymbolDataModel", 
      PROTO_3, 
      null, 
      "ringstrings.proto"
    ) {
      public override fun encodedSize(`value`: SymbolDataModel): Int {
        var size = value.unknownFields.size
        if (value.profile_id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(1,
            value.profile_id)
        if (value.chart_id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(2, value.chart_id)
        if (value.strata_id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(3, value.strata_id)
        if (value.type_id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(4, value.type_id)
        if (value.symbol_id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(5, value.symbol_id)
        if (value.desc_id != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(6, value.desc_id)
        if (value.name != "") size += ProtoAdapter.STRING.encodedSizeWithTag(7, value.name)
        if (value.settings != null) size += RingStringsAppSettings.ADAPTER.encodedSizeWithTag(8,
            value.settings)
        return size
      }

      public override fun encode(writer: ProtoWriter, `value`: SymbolDataModel): Unit {
        if (value.profile_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.profile_id)
        if (value.chart_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.chart_id)
        if (value.strata_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.strata_id)
        if (value.type_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.type_id)
        if (value.symbol_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.symbol_id)
        if (value.desc_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 6, value.desc_id)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.name)
        if (value.settings != null) RingStringsAppSettings.ADAPTER.encodeWithTag(writer, 8,
            value.settings)
        writer.writeBytes(value.unknownFields)
      }

      public override fun encode(writer: ReverseProtoWriter, `value`: SymbolDataModel): Unit {
        writer.writeBytes(value.unknownFields)
        if (value.settings != null) RingStringsAppSettings.ADAPTER.encodeWithTag(writer, 8,
            value.settings)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.name)
        if (value.desc_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 6, value.desc_id)
        if (value.symbol_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.symbol_id)
        if (value.type_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.type_id)
        if (value.strata_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.strata_id)
        if (value.chart_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.chart_id)
        if (value.profile_id != 0) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.profile_id)
      }

      public override fun decode(reader: ProtoReader): SymbolDataModel {
        var profile_id: Int = 0
        var chart_id: Int = 0
        var strata_id: Int = 0
        var type_id: Int = 0
        var symbol_id: Int = 0
        var desc_id: Int = 0
        var name: String = ""
        var settings: RingStringsAppSettings? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> profile_id = ProtoAdapter.INT32.decode(reader)
            2 -> chart_id = ProtoAdapter.INT32.decode(reader)
            3 -> strata_id = ProtoAdapter.INT32.decode(reader)
            4 -> type_id = ProtoAdapter.INT32.decode(reader)
            5 -> symbol_id = ProtoAdapter.INT32.decode(reader)
            6 -> desc_id = ProtoAdapter.INT32.decode(reader)
            7 -> name = ProtoAdapter.STRING.decode(reader)
            8 -> settings = RingStringsAppSettings.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return SymbolDataModel(
          profile_id = profile_id,
          chart_id = chart_id,
          strata_id = strata_id,
          type_id = type_id,
          symbol_id = symbol_id,
          desc_id = desc_id,
          name = name,
          settings = settings,
          unknownFields = unknownFields
        )
      }

      public override fun redact(`value`: SymbolDataModel): SymbolDataModel = value.copy(
        settings = value.settings?.let(RingStringsAppSettings.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<SymbolDataModel> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
