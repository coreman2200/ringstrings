plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.squareup.wire'
    id 'org.jetbrains.kotlin.android'
    id "org.jmailen.kotlinter"
}

wire {
    sourcePath {
        srcDir 'com/coreman2200/ringstrings/data/protos/gen'
        include 'com/coreman2200/ringstrings/data/protos/gen/ringstrings.proto'
    }
    proto {
        out 'com/coreman2200/ringstrings/data/protos'
    }
    kotlin {
        android=true
    }
    java {
        android=true
    }
}

android {
    compileSdk compile_sdk

    defaultConfig {
        minSdk min_sdk
        targetSdk target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // used by Room, to test migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility(JavaVersion.VERSION_11)
        targetCompatibility(JavaVersion.VERSION_11)
    }
    kotlinOptions {
        jvmTarget = "11"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        main {
            manifest.srcFile './src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
        }

        test.resources.srcDirs += ["src/main"]

        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.datastore:datastore:1.0.0"
    implementation 'com.google.code.gson:gson:2.8.9'
    api "com.squareup.wire:wire-runtime:4.0.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"


    implementation project(':domain')

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "io.arrow-kt:arrow-fx-coroutines:$arrowVersion"

    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"


    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
    testImplementation 'androidx.test:core-ktx:1.4.0'

    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation('com.squareup.assertj:assertj-android:1.2.0') {
        exclude group: 'com.android.support'
    }
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "androidx.arch.core:core-testing:2.1.0"



    /*testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testCompileOnly 'junit:junit:4.13'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'


    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"*/

}

kotlinter {
    ignoreFailures = true
}